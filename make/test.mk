# Generated By: Cursor (Claude Sonnet 4.5)
# Test Targets
# =============

.PHONY: test coverage coverage-report coverage-verify test-py37 clean-py37

test: requirements-dev ## Run all tests
	@if [ -f "$(VENV_UV)" ]; then \
		$(VENV_UV) pip install -e . --quiet; \
	else \
		$(VENV_PIP) install -e . --quiet; \
	fi
	@$(VENV_PYTHON) -m pytest tests/ -v $(ARGS)
	@printf "$(GREEN)✅ Tests completed$(RESET)\n"

coverage-report: requirements-dev ## Generate coverage report without failing
	@if [ -f "$(VENV_UV)" ]; then \
		$(VENV_UV) pip install -e . --quiet; \
	else \
		$(VENV_PIP) install -e . --quiet; \
	fi
	@$(VENV_PYTHON) -m pytest tests/ --cov=src --cov-report=html --cov-report=term --cov-report=xml $(ARGS)
	@$(VENV_PYTHON) -m coverage report | tail -1 | awk '{print $$4}' | sed 's/%//' > .coverage-percentage
	@printf "$(GREEN)✅ Coverage report generated$(RESET)\n"

coverage-verify: ## Verify coverage meets threshold
	@if [ ! -f .coverage-percentage ]; then \
		printf "$(RED)❌ No coverage data found. Run 'make coverage-report' first.$(RESET)\n"; \
		exit 1; \
	fi
	@COVERAGE=$$(cat .coverage-percentage); \
	echo "Coverage: $${COVERAGE}%"; \
	if [ "$$(echo "$${COVERAGE}" | cut -d. -f1)" -lt $(COVERAGE_THRESHOLD) ]; then \
		printf "$(RED)❌ Coverage $${COVERAGE}%% is below $(COVERAGE_THRESHOLD)%% threshold$(RESET)\n"; \
		exit 1; \
	else \
		printf "$(GREEN)✅ Coverage $${COVERAGE}%% meets $(COVERAGE_THRESHOLD)%% threshold$(RESET)\n"; \
	fi

coverage: coverage-report coverage-verify ## Run tests with coverage and verify threshold

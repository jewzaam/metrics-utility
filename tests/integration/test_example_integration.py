# Generated By: Cursor (Claude Sonnet 4.5)
"""Integration tests for metrics-utility."""

import time

from metrics_utility import add, inc, set


def test_metrics_lifecycle() -> None:
    """Test full lifecycle of creating and updating metrics."""
    # Use unique metric names to avoid conflicts
    test_id = str(time.time()).replace(".", "_")
    gauge_name = f"test_lifecycle_gauge_{test_id}"
    counter_name = f"test_lifecycle_counter_{test_id}"

    labels = {"env": "test", "app": "metrics-utility"}

    # Set gauge value
    set(gauge_name, 100.0, labels.copy())

    # Add to gauge
    add(gauge_name, 50.0, labels.copy())

    # Increment counter
    inc(counter_name, labels.copy())
    inc(counter_name, labels.copy())

    # Verify metrics exist (basic check)
    from metrics_utility.core import counters, gauges

    assert gauge_name in gauges
    assert counter_name in counters

# Generated By: Cursor (Claude Sonnet 4.5)
name: Auto Release

on:
  push:
    branches: [ main ]

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need previous commit to compare

    - name: Check if version changed
      id: version_check
      run: |
        # Get current version
        CURRENT_VERSION=$(grep '^version = ' pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        echo "current_version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
        
        # Get previous version (if exists)
        git show HEAD^:pyproject.toml > /tmp/prev_pyproject.toml 2>/dev/null || echo 'version = "0.0.0"' > /tmp/prev_pyproject.toml
        PREVIOUS_VERSION=$(grep '^version = ' /tmp/prev_pyproject.toml | sed 's/version = "\(.*\)"/\1/')
        echo "previous_version=$PREVIOUS_VERSION" >> $GITHUB_OUTPUT
        
        # Check if version changed
        if [ "$CURRENT_VERSION" != "$PREVIOUS_VERSION" ]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
          echo "Version changed from $PREVIOUS_VERSION to $CURRENT_VERSION"
        else
          echo "version_changed=false" >> $GITHUB_OUTPUT
          echo "No version change detected"
        fi

    - name: Check if tag exists
      id: tag_check
      if: steps.version_check.outputs.version_changed == 'true'
      run: |
        VERSION=${{ steps.version_check.outputs.current_version }}
        if git rev-parse "v$VERSION" >/dev/null 2>&1; then
          echo "Tag v$VERSION already exists"
          echo "tag_exists=true" >> $GITHUB_OUTPUT
        else
          echo "Tag v$VERSION does not exist"
          echo "tag_exists=false" >> $GITHUB_OUTPUT
        fi

    - name: Create and push tag
      if: steps.version_check.outputs.version_changed == 'true' && steps.tag_check.outputs.tag_exists == 'false'
      run: |
        VERSION=${{ steps.version_check.outputs.current_version }}
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git tag -a "v$VERSION" -m "Release v$VERSION"
        git push origin "v$VERSION"
        echo "âœ… Created and pushed tag v$VERSION"

